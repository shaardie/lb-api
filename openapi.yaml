openapi: "3.0.0"
info:
  version: 0.1.0
  title: Loadbalancer API
  description: API to configure a loadbalancer
  contact:
    name: Sven Haardiek
    email: sven@haardiek.de
  license:
    name: MIT
    url: https://choosealicense.com/licenses/mit/
paths:
  /healthz:
    get:
      description: Health check endpoint
      operationId: getHealth
      responses:
        '200':
          description: Everything OK
          application/json:
            schema:
              type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /loadbalancers:
    get:
      description: Get all loadbalancer
      operationId: GetLoadbalancers
      responses:
        '200':
          description: List of all loadbalancers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/loadbalancer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /loadbalancers/{name}:
    get:
      description: Get loadbalancer by Name
      operationId: GetLoadbalancer
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Named loadbalancer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loadbalancer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Create a new loadbalancer
      operationId: CreateLoadBalancer
      parameters:
        - $ref: '#/components/parameters/name'
      requestBody:
        description: Create a new loadbalancer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loadbalancer'
      responses:
        '201':
          description: Named loadbalancer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loadbalancer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Delete a loadbalancer
      operationId: DeleteLoadBalancer
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: Deleted Loadbalancer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  parameters:
    name:
      name: name
      in: path
      description: Name of the loadbalancer
      required: true
      schema:
        type: string
        minLength: 1
        example: 9b6ce066-d7c1-4cd5-bf6f-0f363f9084fb
  schemas:
    loadbalancer:
      type: object
      required:
        - name
        - config
        - status
      properties:
        name:
          type: string
          readOnly: true
          example: 9b6ce066-d7c1-4cd5-bf6f-0f363f9084fb
        config:
          $ref: '#/components/schemas/config'
        status:
          $ref: '#/components/schemas/status'

    config:
      type: object
      required:
        - frontends
      properties:
        frontends:
          type: array
          items:
            type: object
            required:
              - port
              - backend
            properties:
              port:
                type: integer
                minimum: 1
                maximum: 65536
                example: 1337
              backend:
                type: object
                properties:
                  server:
                    type: array
                    items:
                      type: string
                      pattern: '^.+:[0-9]+$'
                      example: 1.2.3.4:1337

    status:
      type: object
      readOnly: true
      properties:
        ip:
          type: string
          example: 1.2.3.4
        hostname:
          type: string
          example: hostname.example.com

    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Not Found"
